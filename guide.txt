Lab 1

Installation of the OS - Comprehensive Exam Guide

1. Objectives
Install a Debian/Linux operating system on a removable USB disk. This includes understanding the complete installation process, basic configurations, troubleshooting, and boot system setup. By mastering these steps, you gain the foundation for further advanced Linux administration tasks.

2. Prerequisites
- Review essential UNIX commands: `cd`, `ls`, `mkdir`, `chmod`.
- Practice using `vi` or any preferred text editor.
- Familiarize yourself with partitioning and file systems.
- Run commands as superuser using `sudo su` or `su -`.

3. Installation Steps

### 3.1 Hardware Identification
1. Use these commands to identify and analyze hardware:
   ```bash
   lspci   # List PCI devices, such as network and display controllers
   lsusb   # List connected USB devices
   dmesg   # Display kernel messages to identify new devices
   ```
2. Check the `/dev` directory for device names (e.g., `/dev/sda` for SATA drives, `/dev/nvme0` for NVMe).

### 3.2 Disk Partitioning
1. Unmount any mounted devices:
   ```bash
   umount /dev/sdX*
   ```
2. Use `gdisk` to partition the drive (replace `/dev/sdX` with your drive):
   ```bash
   gdisk /dev/sdX
   ```
3. Create these partitions:
   | Partition     | Size     | Mount Point    | Filesystem |
   |---------------|----------|----------------|------------|
   | /dev/sdX1     | 512MB    | /boot/efi      | FAT32      |
   | /dev/sdX2     | 30GB+    | /              | ext4       |
   | /dev/sdX3     | 5GB      | /usr/local     | ext4       |
   | /dev/sdX4     | 100GB+   | /home          | ext4       |
   | /dev/sdX5     | 2xRAM    | Swap           | Swap       |
   | /dev/sdX6     | 20GB     | Reserved       | None       |
4. Save the partition table in `gdisk`.

### 3.3 Creating File Systems
1. Format the partitions:
   ```bash
   mkfs.vfat /dev/sdX1             # EFI system partition
   mkfs.ext4 /dev/sdX2             # Root partition
   mkfs.ext4 /dev/sdX3             # /usr/local partition
   mkfs.ext4 /dev/sdX4             # Home partition
   mkswap /dev/sdX5                # Swap partition
   ```

### 3.4 Mount Partitions
1. Create a directory for installation and mount:
   ```bash
   mkdir /mnt/linux
   mount /dev/sdX2 /mnt/linux
   mkdir -p /mnt/linux/{home,usr/local}
   mount /dev/sdX4 /mnt/linux/home
   mount /dev/sdX3 /mnt/linux/usr/local
   ```

### 3.5 Installing the Base System
1. Download the installation package from the server:
   ```bash
   sftp aso@asoserver.pc.ac.upc.edu
   get /packages/aso-install.tar.gz
   tar xzf aso-install.tar.gz -C /mnt/linux
   rm aso-install.tar.gz
   ```

### 3.6 Bind-Mount System Directories
1. Bind required directories for installation:
   ```bash
   for dir in /dev /dev/pts /proc /sys /run; do
       mount --bind $dir /mnt/linux$dir
   done
   ```

4. System Configuration

### 4.1 Configuring File Systems Table (`/etc/fstab`)
1. Edit `/mnt/linux/etc/fstab` with these entries:
   ```
   /dev/sdX5  none    swap    defaults    0 0
   /dev/sdX2  /       ext4    defaults    0 1
   /dev/sdX4  /home   ext4    defaults    0 2
   ```

### 4.2 Installing and Configuring the Bootloader
1. Switch to the new system environment:
   ```bash
   chroot /mnt/linux
   ```
2. Install and configure GRUB:
   ```bash
   grub-install --target=x86_64-efi /dev/sdX
   update-grub
   ```
3. Exit chroot and unmount all partitions:
   ```bash
   exit
   umount -R /mnt/linux
   ```

### 4.3 Locale and Keyboard Settings
1. Configure locales and keyboard layout:
   ```bash
   dpkg-reconfigure locales
   dpkg-reconfigure console-data
   dpkg-reconfigure keyboard-configuration
   ```

### 4.4 Setting Passwords
1. Set root and `aso` user passwords:
   ```bash
   passwd
   ```

5. Post-Installation Steps

### 5.1 Adjustments and Optimizations
1. Change file system check intervals:
   ```bash
   tune2fs -c 28 /dev/sdX2
   ```

### 5.2 Network Configuration
1. **Manual Network Configuration:**
   - Assign an IP address to your interface:
     ```bash
     ip address add 192.168.1.100/24 dev eth0
     ```
     This assigns the IP `192.168.1.100` with a subnet mask of `/24` to the `eth0` network interface.
   - Add a default gateway:
     ```bash
     ip route add default via 192.168.1.1
     ```
     This sets `192.168.1.1` as the default gateway for outbound traffic.
   - Configure DNS resolution by editing `/etc/resolv.conf`:
     ```
     echo "nameserver 8.8.8.8" > /etc/resolv.conf
     ```
     This sets Googleâ€™s public DNS as the resolver.
   - Verify the configuration:
     ```bash
     ping -c 4 8.8.8.8   # Test connectivity to an external IP
     ping -c 4 google.com # Test DNS resolution
     ```

2. **Persistent Network Configuration:**
   - Edit `/etc/network/interfaces` for a static IP:
     ```
     auto eth0
     iface eth0 inet static
         address 192.168.1.100
         netmask 255.255.255.0
         gateway 192.168.1.1
         dns-nameservers 8.8.8.8 8.8.4.4
     ```
     This ensures the settings persist after reboot.
   - Restart networking to apply changes:
     ```bash
     systemctl restart networking
     ```

3. **Dynamic Configuration with DHCP:**
   - Update `/etc/network/interfaces` for DHCP:
     ```
     auto eth0
     iface eth0 inet dhcp
     ```
   - Restart networking to obtain an IP address:
     ```bash
     systemctl restart networking
     ```
   - Verify the assigned IP using:
     ```bash
     ip address show eth0
     ```

### 5.3 Additional Tools and Privileges
1. Install `sudo` and add the `aso` user:
   ```bash
   apt update
   apt install sudo
   usermod -aG sudo aso
   ```
2. Test privileges by running `sudo` commands.

### 5.4 Systemd Operations
1. Familiarize yourself with essential `systemctl` commands:
   ```bash
   systemctl list-units              # List active units
   systemctl enable service_name     # Enable services
   systemctl disable service_name    # Disable services
   ```

6. Conclusion
This expanded guide provides a detailed, actionable workflow for setting up a Debian/Linux system. It highlights key commands, best practices, and troubleshooting tips to ensure a seamless installation experience. Use this as a foundational reference for future advanced system administration tasks.

