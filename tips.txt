OS Installation:
- lspci
- lsusb
Nos permiten identificar los dispositivos directamente conectados al bus PCI y USB

Remember that devices are generally stored into the /dev directory. Take into consideration that the new flash drives 
using the NVME standard are attached to /dev/nvme? endpoint, where ? is an integer representing the device controller 
registered number, which starts at 0. Then, /dev/nvme0n? stands for the first NVME device’s namespace, which starts at 1. 
And finally, /dev/nvme0n1p? stands for the partition number of the particular device. A device name example would be /dev/nvme0n1p1. 
Also consider that legacy harddrives connected to the SATA bus follow the naming convention of sd (as of SATA1 Disk), 
while sorting the drive names alphabetically: a for the first disk, b for the second, . . . down to zz. Consequently, 
the third SATA harddrive on a system will have the device name of /dev/sdc.

Partitions:
Ubuntu automatically mounts all external drives when plugged in, this may lead to issues later during the lab, 
as the disk already has some partitions. It is strongly recommended to umount all the external drives before continuing. 
To do so run:
- umount /dev/usb* (usb puede ser sda, sdb, ...)
Para particionar el disco:
- gdisk /dev/usb (sda, sdb, ...)

Partition table:
-> /dev/usb1 EFI System Partition (ESP) (EF00) 512MB /boot/efi This partition will hold the necesary EFI Boot information. 
It MUST be formatted with FAT32 (vfat) filesystem
-> /dev/usb2 Linux (8304) 30GB+ / This partition will hold the main system, a typical Debian installation requires around 5GB, 
however, when we add more software it may grow considerably. Use at least 30Gb
-> /dev/usb3 Linux (8300) 5GB /usr/local We don’t use too much this partition during the course, with 5GB it should be enough, 
in a real system it depends on the actual requirements regarding selfcompiled applications
-> /dev/usb4 Linux (8302) 100GB+ /home This one in general is where most space should be devoted. You can put 100GB or more
-> /dev/usb5 Swap(8200) 2xRAM Put twice the size of the machine’s RAM
-> /dev/usb6 Linux (8300) 20GB Reserved for future use, you don’t need to create it now

Disk configuration:
-> Swap Area:
- mkswap /dev/usb
-> Linux FileSystem
- mkfs -t fstype /dev/sub (fstype = ext4, btrfs, vfat, ...)
Currently the de facto standard in Linux systems is ext4, use this one when creating the filesystems

Mounting the filesystems:
Now we have to mount the filesystems in a new temporary directory to be able to install the software. 
Let’s create the mount points for the installation, using a new directory:
- mkdir /linux
And now we will mount all filesystems inside such a mount point (/linux), creating the appropriate directories inside, 
at the same time. Don’t forget /boot/efi as it will be required to boot the new system.
- mount partition directory
For instance, / partition into /linux, /home partition into /linux/home, etc.). It is important to create 
the directories after mounting /linux but before mounting the rest.

Installation of the base system:
In our case, we will install from a prepackaged system image that is in the ASO SFTP server: asoserver.pc.ac.upc.edu 
You will have to decompress it into the USB disk. cd into the filesystem that will become the root (/) of your new installation 
(remember, mounted on /linux):
- cd /linux
And now get the image:
- sftp aso@asoserver.pc.ac.upc.edu
Use the following password: AsORoCkSHaRd!
From there you can download (using the command get) the file /packages/aso-install.tar.gz
- get /packages/aso-install.tar.gz
Esto pondra el archivo en el directorio actual. Lo puedo mover con un mv
Untar de file:
- tar xzf aso-install.tar.gz
Now look at the contents of the /linux directory. You should see that it has been populated with the basic components
of your future system. Optionally we can erase the downloaded file by running:
- rm aso-install.tar.gz

Finish mounting auxiliary systems:
We also have to bind-mount the directories /dev, /sys, and /proc inside /linux, to temporarily expose the current existing devices
to the new system. To do that, use the following command:
-  for i in /dev /dev/pts /proc /sys /run; do
> mount -B $i /linux/$i
> done
Use the mount command without any parameters to see which filesystems are mounted, and verify that all USB disk partitions
are mounted correctly in the appropriate directories, including the /dev directory with the system device files.

Basic system configuration:
During the installation process, only the ’vi’ editor will be available in most cases
Configuring the file systems table: (/etc/fstab)
In order for the file systems to be mounted correctly at system power-on, you need to generate a correct
/etc/fstab file. To do this edit the file and make sure that the following parts exist:
Add your swap partition:
device none swap defaults 0 0
• Add root partition:
device / ext4 defaults 0 1
• Add the rest of filesystems you created previously:
device mountpoint fstype defaults 0 2
Changing root directory:
At this point, you can change the root directory of your system, and temporarily use the software that
you installed in the system, instead of the one currently available on the system. To change the root of
your system, use:
- chroot /linux
-> chroot: Esto significa que el proceso que ejecutas con chroot y cualquier programa que inicie dentro de él no podrán ver ni
acceder a archivos fuera del nuevo directorio raíz (a menos que haya enlaces o permisos especiales).
Ejemplo:
- sudo chroot /mnt/chroot
Ahora, dentro de ese entorno, /mnt/chroot actúa como /. Si intentas navegar a cualquier otro lugar, estarás limitado a los archivos dentro de ese directorio.
From this point on, you can use the system we have installed, and access for example manual pages with the command man.

Configuring the keyboard:
In Debian, the keyboard layout is configured by running:
- dpkg-reconfigure locales
- dpkg-reconfigure console-data
- dpkg-reconfigure keyboard-configuration
In the locales configuration make sure you select a suitable locale for your machine, by searching
for it and pressing <Spacebar> to select it.

dpkg-reconfigure locales: Configura idioma y formatos regionales.
dpkg-reconfigure console-data: Configura el diseño del teclado para la consola. (qwerty/es)
dpkg-reconfigure keyboard-configuration: Configura el diseño del teclado globalmente

Configuring the boot process:




















